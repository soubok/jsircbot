/* ***** BEGIN LICENSE BLOCK *****
 * Version: GNU GPL 2.0
 *
 * The contents of this file are subject to the
 * GNU General Public License Version 2.0; you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 * ***** END LICENSE BLOCK ***** */


(function testModule() {
	
	this.name = this.constructor.name;
	var _mod = this;
	
	var _moduleListeners = {
		
		ctcp: {
		
			PING: function( modCmd, tag, from, to, data ) {

				var nick = from.substring( 0, from.indexOf('!') );
				_mod.api.CtcpResponse( nick, tag, data );
			}
		},	
		
		botcmd: {

			raw: function( modCmd, cmdName, cmdData, command, from, to, msg ) {

				_mod.Send( cmdData );
			},
			dump: function( modCmd, cmdName, cmdData, command, from, to, msg ) {

				Print(dumpData(_mod.data), '\n');

			},
			quit: function() {

				_mod.api.Quit('bye...');
			},
			
			reload: function( modCmd, cmdName, cmdData, command, from, to, msg ) {

				var nick = from.split('!',1);
				var replyTo = to[0] == '#' ? to : nick;

				core.ReloadModuleByName(cmdData);

				_mod.api.Privmsg && _mod.api.Privmsg( replyTo, 'Done' );
			},

			eval: function( modCmd, cmdName, cmdData, command, from, to, msg ) {

				if( from != 'soubok!i=soubok@koe67-1-82-231-70-117.fbx.proxad.net' )
					return;

				var nick = from.split('!',1);
				var replyTo = to[0] == '#' ? to : nick;

				try {
					_mod.api.Privmsg( replyTo, eval(cmdData) );
				} catch(ex) {
					_mod.api.Privmsg( replyTo, ex );
				}
			},
			
			test: function( modCmd, cmdName, cmdData, command, from, to, msg ) {
				
				var nick = from.split('!',1);
				_mod.api.OpenDCCChat(nick, function(connection) {
				
					connection.OnDisconnected = function() DPrint('OnDisconnected');
					connection.Write('hello\n');
				});

/*
				var url = 'http://jsircbot.googlecode.com/svn/trunk/dccReceiver.jsmod';
				HttpRequest( url, '', 1000, function(statusCode, reasonPhrase, headers, body) {
					DPrint(body.length);
				});
				
				
				DPrint( Array.slice(arguments).toSource() )

				var nick = from.split('!',1);
				var replyTo = to[0] == '#' ? to : nick;
*/

	//			for ( var i = 0; i<100; i++ ) _mod.api.Privmsg( nick, 'XxxxxxxxXxxxxxxxXxxxxxxxXxxxx '+i );
//				_mod.api.Privmsg( to, core.ModuleList() );
	//			_mod.api.Privmsg( replyTo, new Date() );
	//			_mod.api.Privmsg( to, Array.slice(arguments).toSource() );
			}
		}
	}

	this.AddModuleListeners = function() _mod.AddModuleListenerSet( _moduleListeners );
	this.RemoveModuleListeners = function() _mod.RemoveModuleListenerSet( _moduleListeners );

/*
		addDataListener( _module.data.channel['#jslibs'].names['soubok'], function(info) {
			_module.Send( 'PRIVMSG soubok :hi! ('+info+')' );
//			_module.Send( 'PRIVMSG soubok :'+_module.api.Ctcp('VERSION') );
		});
*/

})


/*

DCCchat:
  CHAT <space> <protocol> <space> <ip> <space> <port>
  
*/